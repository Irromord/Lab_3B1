package animals;

// Интерфейс для животных
public interface Animal {
    void eat();   
    void sleep();  
}

// Абстрактный класс для всех животных
public abstract class AnimalBase implements Animal {
    protected String name;
    protected int age;

    // Конструктор класса "AnimalBase"
    public AnimalBase(String name, int age) {
        this.name = name;
        this.age = age;
    }

    public abstract void makeSound();  // Абстрактный метод для издания звука

    @Override
    public void eat() {
        System.out.println(name + " is eating.");  // Реализация метода "eat" для всех животных
    }

    @Override
    public void sleep() {
        System.out.println(name + " is sleeping.");  // Реализация метода "sleep" для всех животных
    }
}

// Пакет "mammals"
package animals.mammals;

import animals.AnimalBase;

// Класс для млекопитающих
public abstract class Mammal extends AnimalBase {
    public Mammal(String name, int age) {
        super(name, age);
    }

    public abstract void giveBirth();  // Абстрактный метод для потомства
}

// Класс для тигров
public class Tiger extends Mammal {
    public Tiger(String name, int age) {
        super(name, age);
    }

    @Override
    public void makeSound() {
        System.out.println("Roar!");  // Реализация метода "makeSound" для тигров
    }

    @Override
    public void giveBirth() {
        System.out.println(name + " gives birth to cubs.");  // Реализация метода "giveBirth" для тигров
    }
}

// Пакет "birds"
package animals.birds;

import animals.AnimalBase;

// Класс для птиц
public abstract class Bird extends AnimalBase {
    public Bird(String name, int age) {
        super(name, age);
    }

    public abstract void layEggs();  // Абстрактный метод для откладывания яиц
}

// Класс для пингвинов
public class Penguin extends Bird {
    public Penguin(String name, int age) {
        super(name, age);
    }

    @Override
    public void makeSound() {
        System.out.println("Hoot!");  // Реализация метода "makeSound" для пингвинов
    }

    @Override
    public void layEggs() {
        System.out.println(name + " lays eggs.");  // Реализация метода "layEggs" для пингвинов
    }
}

// Пакет "zoo"
package zoo;

import animals.Animal;

import java.util.ArrayList;
import java.util.List;

// Класс для зоопарка
public class Zoo {
    private List<Animal> animals;

    public Zoo() {
        animals = new ArrayList<>();
    }

    public void addAnimal(Animal animal) {
        animals.add(animal);  // Добавление животного в зоопарк
    }

    public void feedAnimals() {
        for (Animal animal : animals) {
            animal.eat();  // Кормление всех животных в зоопарке
        }
    }

    public void makeAnimalsSleep() {
        for (Animal animal : animals) {
            animal.sleep();  // Все животные спят
        }
    }
}
